{"ast":null,"code":"import { db } from \"../../utils/firebaseConfig\";\nexport const createComment = (comment, game, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  return db.collection(\"Comments\").add({\n    author: currentUser.displayName,\n    gameId: game.id,\n    text: comment,\n    profilID: currentUser.uid\n  }).then(() => {\n    console.log(\"createComment OK\");\n    return true;\n  }).catch(reason => {\n    console.log(\"createComment Error : \" + reason);\n    return false;\n  });\n};\nexport const updateComment = (updatedText, comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  return db.collection(\"Comments\").doc(comment.id).set({\n    author: comment.data().author,\n    gameId: comment.data().gameId,\n    profilID: comment.data().profilID,\n    text: updatedText\n  }).then(() => {\n    console.log(\"updateComment OK\");\n    return true;\n  }).catch(reason => {\n    console.log(\"updateComment Error : \" + reason);\n    return false;\n  });\n  deleteComment();\n};\nexport const deleteComment = (comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  return db.collection(\"Comments\").doc(comment.id).delete().then(() => {\n    console.log(\"deleteComment OK\");\n    return true;\n  }).catch(reason => {\n    console.log(\"deleteComment Error : \" + reason);\n    return false;\n  });\n};\nexport const getCommentsForProfil = async profilID => {\n  try {\n    console.log(\"id : \" + profilID);\n    const snapshot = await db.collection(\"Comments\").where(\"ProfilID\", \"==\", profilID).get();\n    console.log(\"tete \" + snapshot.data());\n    return snapshot;\n  } catch (reason) {\n    return [];\n  }\n};","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/CommentrayFirestoreService.jsx"],"names":["db","createComment","comment","game","currentUser","collection","add","author","displayName","gameId","id","text","profilID","uid","then","console","log","catch","reason","updateComment","updatedText","doc","set","data","deleteComment","delete","getCommentsForProfil","snapshot","where","get"],"mappings":"AAAA,SAASA,EAAT,QAAmB,4BAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,IAAV,EAAgBC,WAAhB,KAAgC;AAC3D,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB;AACD;;AACD,SAAOJ,EAAE,CACNK,UADI,CACO,UADP,EAEJC,GAFI,CAEA;AACHC,IAAAA,MAAM,EAAEH,WAAW,CAACI,WADjB;AAEHC,IAAAA,MAAM,EAAEN,IAAI,CAACO,EAFV;AAGHC,IAAAA,IAAI,EAAET,OAHH;AAIHU,IAAAA,QAAQ,EAAER,WAAW,CAACS;AAJnB,GAFA,EAQJC,IARI,CAQC,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAO,IAAP;AACD,GAXI,EAYJC,KAZI,CAYEC,MAAM,IAAI;AACfH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BE,MAAvC;AACA,WAAO,KAAP;AACD,GAfI,CAAP;AAgBD,CApBM;AAsBP,OAAO,MAAMC,aAAa,GAAG,CAACC,WAAD,EAAclB,OAAd,EAAuBE,WAAvB,KAAuC;AAClE,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB;AACD;;AAED,SAAOJ,EAAE,CACNK,UADI,CACO,UADP,EAEJgB,GAFI,CAEAnB,OAAO,CAACQ,EAFR,EAGJY,GAHI,CAGA;AACHf,IAAAA,MAAM,EAAEL,OAAO,CAACqB,IAAR,GAAehB,MADpB;AAEHE,IAAAA,MAAM,EAAEP,OAAO,CAACqB,IAAR,GAAed,MAFpB;AAGHG,IAAAA,QAAQ,EAAEV,OAAO,CAACqB,IAAR,GAAeX,QAHtB;AAIHD,IAAAA,IAAI,EAAES;AAJH,GAHA,EASJN,IATI,CASC,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAO,IAAP;AACD,GAZI,EAaJC,KAbI,CAaEC,MAAM,IAAI;AACfH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BE,MAAvC;AACA,WAAO,KAAP;AACD,GAhBI,CAAP;AAiBAM,EAAAA,aAAa;AACd,CAvBM;AAyBP,OAAO,MAAMA,aAAa,GAAG,CAACtB,OAAD,EAAUE,WAAV,KAA0B;AACrD,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB;AACD;;AAED,SAAOJ,EAAE,CACNK,UADI,CACO,UADP,EAEJgB,GAFI,CAEAnB,OAAO,CAACQ,EAFR,EAGJe,MAHI,GAIJX,IAJI,CAIC,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAO,IAAP;AACD,GAPI,EAQJC,KARI,CAQEC,MAAM,IAAI;AACfH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BE,MAAvC;AACA,WAAO,KAAP;AACD,GAXI,CAAP;AAYD,CAjBM;AAmBP,OAAO,MAAMQ,oBAAoB,GAAG,MAAMd,QAAN,IAAkB;AACpD,MAAI;AACFG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUJ,QAAtB;AACA,UAAMe,QAAQ,GAAG,MAAM3B,EAAE,CACtBK,UADoB,CACT,UADS,EAEpBuB,KAFoB,CAEd,UAFc,EAEF,IAFE,EAEIhB,QAFJ,EAGpBiB,GAHoB,EAAvB;AAIId,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUW,QAAQ,CAACJ,IAAT,EAAtB;AACA,WAAOI,QAAP;AACL,GARD,CASA,OAAOT,MAAP,EAAe;AACb,WAAO,EAAP;AACD;AACF,CAbM","sourcesContent":["import { db } from \"../../utils/firebaseConfig\";\n\nexport const createComment = (comment, game, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n  return db\n    .collection(\"Comments\")\n    .add({\n      author: currentUser.displayName,\n      gameId: game.id,\n      text: comment,\n      profilID: currentUser.uid\n    })\n    .then(() => {\n      console.log(\"createComment OK\");\n      return true;\n    })\n    .catch(reason => {\n      console.log(\"createComment Error : \" + reason);\n      return false;\n    });\n};\n\nexport const updateComment = (updatedText, comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  return db\n    .collection(\"Comments\")\n    .doc(comment.id)\n    .set({\n      author: comment.data().author,\n      gameId: comment.data().gameId,\n      profilID: comment.data().profilID,\n      text: updatedText\n    })\n    .then(() => {\n      console.log(\"updateComment OK\");\n      return true;\n    })\n    .catch(reason => {\n      console.log(\"updateComment Error : \" + reason);\n      return false;\n    });\n  deleteComment();\n};\n\nexport const deleteComment = (comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  return db\n    .collection(\"Comments\")\n    .doc(comment.id)\n    .delete()\n    .then(() => {\n      console.log(\"deleteComment OK\");\n      return true;\n    })\n    .catch(reason => {\n      console.log(\"deleteComment Error : \" + reason);\n      return false;\n    });\n};\n\nexport const getCommentsForProfil = async profilID => {\n  try {\n    console.log(\"id : \" + profilID  )\n    const snapshot = await db\n      .collection(\"Comments\")\n      .where(\"ProfilID\", \"==\", profilID)\n      .get()\n        console.log(\"tete \" + snapshot.data())\n        return snapshot\n  }\n  catch (reason) {\n    return [];\n  } \n};\n"]},"metadata":{},"sourceType":"module"}