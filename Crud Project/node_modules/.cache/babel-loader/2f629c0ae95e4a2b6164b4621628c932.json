{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/UpdateDelete.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { db } from \"../../utils/firebaseConfig\";\nimport { AuthContext } from \"../../providers/users/UserProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateDelete = ({\n  comment\n}) => {\n  _s();\n\n  const [update, setUpdate] = useState(false);\n  const [updateText, setUpdateText] = useState(\"\");\n  const [selectedDocID, setSelectedDocID] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const authorCheck = () => {\n    if (comment.uid === currentUser.uid) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  authorCheck();\n\n  const updateComment = () => {\n    console.log(\"coucou \" + selectedDocID);\n    comment.text = updateText;\n    console.log(\"coucou \" + updateText);\n    db.collection(\"comments\").doc(selectedDocID).update(comment).then(setUpdate(false)).catch(reason => {\n      console.log(\"error :\" + reason);\n    });\n  };\n\n  const deleteComment = id => {\n    db.collection(\"comments\").doc(id).delete();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdateDelete\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [update === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), authorCheck() && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setUpdate(!update);\n              console.log(comment);\n              setSelectedDocID(comment.id);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteComment(),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), update && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-container-update\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          defaultValue: comment.text,\n          onChange: e => setUpdateText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateComment,\n          children: \"Validate update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateDelete, \"2oHqj3XmqslHuKZ8gMvhgf2NQVQ=\");\n\n_c = UpdateDelete;\nexport default UpdateDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateDelete\");","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/UpdateDelete.jsx"],"names":["React","useState","useContext","db","AuthContext","UpdateDelete","comment","update","setUpdate","updateText","setUpdateText","selectedDocID","setSelectedDocID","currentUser","authorCheck","uid","updateComment","console","log","text","collection","doc","then","catch","reason","deleteComment","id","delete","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { db } from \"../../utils/firebaseConfig\";\nimport { AuthContext } from \"../../providers/users/UserProvider\";\n\nconst UpdateDelete = ({ comment }) => {\n  const [update, setUpdate] = useState(false);\n  const [updateText, setUpdateText] = useState(\"\");\n  const [selectedDocID, setSelectedDocID] = useState(\"\");\n\n  const { currentUser } = useContext(AuthContext);\n\n  const authorCheck = () => {\n    if (comment.uid === currentUser.uid) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  authorCheck();\n\n  const updateComment = () => {\n    console.log(\"coucou \" + selectedDocID);\n    comment.text = updateText\n    console.log(\"coucou \" + updateText);\n    db.collection(\"comments\")\n      .doc(selectedDocID)\n      .update(comment)\n      .then(setUpdate(false))\n      .catch(reason => {\n        console.log(\"error :\" + reason);\n      });\n  };\n\n  const deleteComment = id => {\n    db.collection(\"comments\")\n      .doc(id)\n      .delete();\n  };\n\n  return (\n    <div className=\"UpdateDelete\">\n      <>\n        {update === false && (\n          <div className=\"comment-container\">\n            <p>{comment.text}</p>\n\n            {authorCheck() && (\n              <div className=\"buttons-container\">\n                <button\n                  onClick={() => {\n                    setUpdate(!update);\n                    console.log(comment)\n                    setSelectedDocID(comment.id)\n                  }}\n                > \n                  Update\n                </button>\n                <button onClick={deleteComment()}>delete</button>\n              </div>\n            )}\n          </div>\n        )}\n        {update && (\n          <div className=\"item-container-update\">\n            <textarea\n              defaultValue={comment.text}\n              onChange={e => setUpdateText(e.target.value)}\n            />\n            <button onClick={updateComment}>Validate update</button>\n          </div>\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default UpdateDelete;\n"]},"metadata":{},"sourceType":"module"}