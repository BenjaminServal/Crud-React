{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminserval/dev/GameV2/ExampleProject-main/src/pages/Profil.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../providers/users/UserProvider\";\nimport { useLocation } from \"react-router-dom\";\nimport { getCommentsForProfil } from \"../API/CommentrayFirestoreService\";\nimport { getProfilFromID } from \"../API/ProfilFirestoreService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profil = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const location = useLocation();\n  const profilID = location.state.profilID;\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const user = await getProfilFromID(profilID);\n      setUser(user);\n      const comments = await getCommentsForProfil(profilID);\n      setComments(comments);\n    }\n\n    fetchData();\n  }, [profilID]);\n\n  const currentUserCheck = () => {\n    if (currentUser.uid === profilID) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  currentUserCheck();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Read\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userName\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Profil of : \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), currentUserCheck() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mes commentaires : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), comments && comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentText\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.data().text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameNameComment\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.data().gameName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Commentaires post\\xE9s: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profil, \"2Ee0gx5bpszdEPqdrYcPgbqoLtQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = Profil;\nexport default Profil;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profil\");","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/ExampleProject-main/src/pages/Profil.jsx"],"names":["React","useState","useEffect","useContext","AuthContext","useLocation","getCommentsForProfil","getProfilFromID","Profil","user","setUser","currentUser","location","profilID","state","comments","setComments","fetchData","currentUserCheck","uid","name","map","comment","data","text","gameName","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,oBAAT,QAAqC,mCAArC;AACA,SAASC,eAAT,QAAgC,+BAAhC;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAkBR,UAAU,CAACC,WAAD,CAAlC;AAEA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGD,QAAQ,CAACE,KAAT,CAAeD,QAAhC;AAEA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd,mBAAee,SAAf,GAA2B;AACzB,YAAMR,IAAI,GAAG,MAAMF,eAAe,CAACM,QAAD,CAAlC;AACAH,MAAAA,OAAO,CAACD,IAAD,CAAP;AAEA,YAAMM,QAAQ,GAAG,MAAMT,oBAAoB,CAACO,QAAD,CAA3C;AACAG,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD;;AACDE,IAAAA,SAAS;AACV,GAVQ,EAUN,CAACJ,QAAD,CAVM,CAAT;;AAaA,QAAMK,gBAAgB,GAAG,MAAM;AAC3B,QAAIP,WAAW,CAACQ,GAAZ,KAAsBN,QAA1B,EAAoC;AAClC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACJ,GAND;;AAOAK,EAAAA,gBAAgB;AAEhB,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACA;AAAA,mCAAgBT,IAAI,CAACW,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGF,gBAAgB,kBACf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECH,QAAQ,IACPA,QAAQ,CAACM,GAAT,CAAaC,OAAO,iBAClB;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACC;AAAA,wBAAIA,OAAO,CAACC,IAAR,GAAeC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACC;AAAA,wBAAIF,OAAO,CAACC,IAAR,GAAeE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAkCH,OAAO,CAACI,EAA1C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF,CAHF;AAAA,oBADe,gBAkBf;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,qBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA/DD;;GAAMlB,M;UAIaH,W;;;KAJbG,M;AAiEN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../providers/users/UserProvider\";\nimport { useLocation } from \"react-router-dom\";\nimport { getCommentsForProfil } from \"../API/CommentrayFirestoreService\";\nimport { getProfilFromID } from \"../API/ProfilFirestoreService\";\n\nconst Profil = () => {\n  const [user, setUser] = useState({});\n  const { currentUser } = useContext(AuthContext);\n\n  const location = useLocation();\n  const profilID = location.state.profilID;\n\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    \n    async function fetchData() {\n      const user = await getProfilFromID(profilID);\n      setUser(user);\n\n      const comments = await getCommentsForProfil(profilID);\n      setComments(comments);\n    }\n    fetchData();\n  }, [profilID]);\n\n\n  const currentUserCheck = () => {\n      if (currentUser.uid  ===  profilID) {\n        return true;\n      } else {\n        return false;\n      }\n  }\n  currentUserCheck();\n\n  return (\n    <div className=\"Read\">\n      <div className=\"userName\">\n      <p>Profil of : {user.name}</p>\n      </div>\n      {currentUserCheck() ? (\n        <>\n        <h3>Mes commentaires : </h3>\n        {comments &&\n          comments.map(comment => (\n            <div className=\"comment\">\n            <div className=\"commentBody\" key={comment.id}>\n              <div className=\"commentText\">\n               <p>{comment.data().text}</p>\n              </div>\n              <div className=\"gameNameComment\">\n               <p>{comment.data().gameName}</p>\n              </div>\n            </div>\n            </div>\n          ))}\n        </>\n      ) : (\n        <>\n         <h3>Commentaires post√©s: </h3>\n        </>\n      )}\n\n\n      \n    </div>\n  );\n};\n\nexport default Profil;\n"]},"metadata":{},"sourceType":"module"}