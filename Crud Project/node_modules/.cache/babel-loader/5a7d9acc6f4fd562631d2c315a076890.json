{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/UpdateDelete.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { db } from \"../../utils/firebaseConfig\";\nimport { AuthContext } from '../../providers/users/UserProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateDelete = ({\n  comment\n}) => {\n  _s();\n\n  const [update, setUpdate] = useState(false);\n  const [updateText, setUpdateText] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const authorCheck = () => {\n    if (comment.uid === currentUser.uid) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  authorCheck();\n\n  const updateComment = id => {\n    db.collection(\"comments\").doc(id).update({\n      text: updateText\n    }).then(setUpdate(false)).catch(reason => {\n      console.log(reason);\n    });\n  };\n\n  const deleteComment = id => {\n    db.collection(\"comments\").doc(id).delete();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdateDelete\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [update === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), authorCheck() && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setUpdate(!update),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteComment(),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), update && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-container-update\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          defaultValue: comment.text,\n          onChange: e => setUpdateText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateComment(),\n          children: \"Validate update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateDelete, \"6iha2Tvh+jKD6ey9x2QXltrMcYg=\");\n\n_c = UpdateDelete;\nexport default UpdateDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateDelete\");","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/UpdateDelete.jsx"],"names":["React","useState","useContext","db","AuthContext","UpdateDelete","comment","update","setUpdate","updateText","setUpdateText","currentUser","authorCheck","uid","updateComment","id","collection","doc","text","then","catch","reason","console","log","deleteComment","delete","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,EAAT,QAAmB,4BAAnB;AACA,SAASC,WAAT,QAA4B,oCAA5B;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM;AAACU,IAAAA;AAAD,MAAgBT,UAAU,CAACE,WAAD,CAAhC;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIN,OAAO,CAACO,GAAR,KAAgBF,WAAW,CAACE,GAAhC,EAAqC;AACnC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAND;;AAOAD,EAAAA,WAAW;;AAEX,QAAME,aAAa,GAAIC,EAAD,IAAQ;AAC5BZ,IAAAA,EAAE,CAACa,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BF,EAA9B,EAAkCR,MAAlC,CAAyC;AACvCW,MAAAA,IAAI,EAAET;AADiC,KAAzC,EAEGU,IAFH,CAGEX,SAAS,CAAC,KAAD,CAHX,EAIEY,KAJF,CAIQC,MAAM,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAND;AAOD,GARD;;AAUA,QAAMG,aAAa,GAAIT,EAAD,IAAQ;AAC5BZ,IAAAA,EAAE,CAACa,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BF,EAA9B,EAAkCU,MAAlC;AACD,GAFD;;AAKE,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACC;AAAA,iBACClB,MAAM,KAAK,KAAX,iBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAA,oBAAID,OAAO,CAACY;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGN,WAAW,mBACV;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACE;AAAQ,YAAA,OAAO,EAAE,MAAMJ,SAAS,CAAC,CAACD,MAAF,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAEiB,aAAa,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,EAeGjB,MAAM,iBACN;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AACE,UAAA,YAAY,EAAED,OAAO,CAACY,IADxB;AAEE,UAAA,QAAQ,EAAGQ,CAAD,IAAOhB,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAFhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAQ,UAAA,OAAO,EAAEd,aAAa,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBH;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA5DD;;GAAMT,Y;;KAAAA,Y;AA8DN,eAAeA,YAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { db } from \"../../utils/firebaseConfig\";\nimport { AuthContext } from '../../providers/users/UserProvider';\n\nconst UpdateDelete = ({comment}) => {\nconst [update, setUpdate] = useState(false);\nconst [updateText, setUpdateText] = useState(\"\");\n\nconst {currentUser} = useContext(AuthContext);\n\nconst authorCheck = () => {\n  if (comment.uid === currentUser.uid) {\n    return true;\n  } else {\n    return false;\n  }\n};\nauthorCheck();\n\nconst updateComment = (id) => {\n  db.collection(\"comments\").doc(id).update({\n    text: updateText\n  }).then(\n    setUpdate(false)\n  ).catch(reason => {\n    console.log(reason  )\n  });\n}\n\nconst deleteComment = (id) => {\n  db.collection(\"comments\").doc(id).delete();\n};\n\n\n  return (\n    <div className=\"UpdateDelete\">\n     <>\n     {update === false && (\n        <div className=\"comment-container\">\n          <p>{comment.text}</p>\n          \n\n          {authorCheck() && (\n            <div className=\"buttons-container\">\n              <button onClick={() => setUpdate(!update)}>Update</button>\n              <button onClick={deleteComment()}>delete</button>\n\n            </div>\n          )}\n        </div>\n      )}\n       {update && (\n        <div className=\"item-container-update\">\n          <textarea\n            defaultValue={comment.text}\n            onChange={(e) => setUpdateText(e.target.value)}\n          />\n          <button onClick={updateComment()}>Validate update</button>\n        </div>\n      )}\n\n     </>\n    </div>\n  );\n};\n\nexport default UpdateDelete;\n"]},"metadata":{},"sourceType":"module"}