{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/UpdateDelete.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { db } from \"../../utils/firebaseConfig\";\nimport { AuthContext } from \"../../providers/users/UserProvider\";\nimport { updateComment, deleteComment } from \"./FirestoreService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateDelete = ({\n  comment\n}) => {\n  _s();\n\n  const [update, setUpdate] = useState(false);\n  const [updateText, setUpdateText] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const authorCheck = () => {\n    if (currentUser) {\n      if (comment.data().profilID === currentUser.uid) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  authorCheck();\n\n  const updateCommentary = () => {\n    updateComment(updateText, comment, currentUser, update);\n    setUpdate(false);\n  };\n\n  const deletCommentary = () => {\n    deleteComment(comment, currentUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdateDelete\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [update === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [comment.data().text, \" par \", comment.data().author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), authorCheck() && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setUpdate(!update);\n              console.log(\"comment :\" + comment);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deletCommentary,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), update && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-container-update\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          defaultValue: comment.data().text,\n          onChange: e => setUpdateText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateCommentary,\n          children: \"Validate update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateDelete, \"Nf5BEcEhXgpF6DcFUTJ/6reguG0=\");\n\n_c = UpdateDelete;\nexport default UpdateDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateDelete\");","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/UpdateDelete.jsx"],"names":["React","useState","useContext","db","AuthContext","updateComment","deleteComment","UpdateDelete","comment","update","setUpdate","updateText","setUpdateText","currentUser","authorCheck","data","profilID","uid","updateCommentary","deletCommentary","text","author","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,EAAT,QAAmB,4BAAnB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,oBAA7C;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAkBX,UAAU,CAACE,WAAD,CAAlC;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxB,QAAID,WAAJ,EAAiB;AACf,UAAIL,OAAO,CAACO,IAAR,GAAeC,QAAf,KAA4BH,WAAW,CAACI,GAA5C,EAAiD;AAC/C,eAAO,IAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF;AACF,GARD;;AASAH,EAAAA,WAAW;;AAEX,QAAMI,gBAAgB,GAAG,MAAM;AAC7Bb,IAAAA,aAAa,CAACM,UAAD,EAAaH,OAAb,EAAsBK,WAAtB,EAAmCJ,MAAnC,CAAb;AACAC,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAKA,QAAMS,eAAe,GAAG,MAAM;AAC5Bb,IAAAA,aAAa,CAACE,OAAD,EAAUK,WAAV,CAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAA,iBACGJ,MAAM,KAAK,KAAX,iBACC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAA,qBAAID,OAAO,CAACO,IAAR,GAAeK,IAAnB,WAA8BZ,OAAO,CAACO,IAAR,GAAeM,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGP,WAAW,mBACV;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACE;AACE,YAAA,OAAO,EAAE,MAAM;AACbJ,cAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAa,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAcf,OAA1B;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAQ,YAAA,OAAO,EAAEW,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAqBGV,MAAM,iBACL;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AACE,UAAA,YAAY,EAAED,OAAO,CAACO,IAAR,GAAeK,IAD/B;AAEE,UAAA,QAAQ,EAAEI,CAAC,IAAIZ,aAAa,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAF9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAQ,UAAA,OAAO,EAAER,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA7DD;;GAAMX,Y;;KAAAA,Y;AA+DN,eAAeA,YAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { db } from \"../../utils/firebaseConfig\";\nimport { AuthContext } from \"../../providers/users/UserProvider\";\nimport { updateComment, deleteComment } from \"./FirestoreService\";\n\nconst UpdateDelete = ({ comment }) => {\n  const [update, setUpdate] = useState(false);\n  const [updateText, setUpdateText] = useState(\"\");\n\n  const { currentUser } = useContext(AuthContext);\n\n  const authorCheck = () => {\n    if (currentUser) {\n      if (comment.data().profilID === currentUser.uid) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n  authorCheck();\n\n  const updateCommentary = () => {\n    updateComment(updateText, comment, currentUser, update);\n    setUpdate(false);\n  };\n\n  const deletCommentary = () => {\n    deleteComment(comment, currentUser);\n  };\n\n  return (\n    <div className=\"UpdateDelete\">\n      <>\n        {update === false && (\n          <div className=\"comment-container\">\n            <p>{comment.data().text} par {comment.data().author}</p>\n            \n\n            {authorCheck() && (\n              <div className=\"buttons-container\">\n                <button\n                  onClick={() => {\n                    setUpdate(!update);\n                    console.log(\"comment :\" + comment);\n                  }}\n                >\n                  Update\n                </button>\n                <button onClick={deletCommentary}>delete</button>\n              </div>\n            )}\n          </div>\n        )}\n        {update && (\n          <div className=\"item-container-update\">\n            <textarea\n              defaultValue={comment.data().text}\n              onChange={e => setUpdateText(e.target.value)}\n            />\n            <button onClick={updateCommentary}>Validate update</button>\n          </div>\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default UpdateDelete;\n"]},"metadata":{},"sourceType":"module"}