{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminserval/dev/GameV2/gamesite/src/pages/Profil.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { db } from '../utils/firebaseConfig';\nimport { AuthContext } from '../providers/users/UserProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profil = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const location = useLocation();\n  const profil = location.state.profil;\n  console.log(currentUser);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    db.collection(\"Comments\").onSnapshot(snapshot => {\n      setComments(snapshot.docs);\n    });\n  }, []);\n  console.log(comments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Read\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Profil of : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), comments && comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentBody\",\n      children: currentUser.uid === comment.data().profilID && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.data().text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profil, \"ehMdiSKLruMNEJ37p1NmV4e41c4=\", true);\n\n_c = Profil;\nexport default Profil;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profil\");","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/gamesite/src/pages/Profil.jsx"],"names":["React","useState","useEffect","useContext","db","AuthContext","Profil","currentUser","location","useLocation","profil","state","console","log","comments","setComments","collection","onSnapshot","snapshot","docs","map","comment","uid","data","profilID","text","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,EAAT,QAAmB,yBAAnB;AACA,SAASC,WAAT,QAA4B,iCAA5B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,UAAU,CAACE,WAAD,CAAlC;AACA,QAAMG,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAMC,MAAM,GAAGF,QAAQ,CAACG,KAAT,CAAeD,MAA9B;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEdE,IAAAA,EAAE,CAACY,UAAH,CAAc,UAAd,EAECC,UAFD,CAEYC,QAAQ,IAAI;AACtBH,MAAAA,WAAW,CACTG,QAAQ,CAACC,IADA,CAAX;AAGD,KAND;AAOD,GATQ,EASN,EATM,CAAT;AAWAP,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEKA,QAAQ,IACPA,QAAQ,CAACM,GAAT,CAAcC,OAAD,iBACX;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGd,WAAW,CAACe,GAAZ,KAAoBD,OAAO,CAACE,IAAR,GAAeC,QAAnC,iBACD;AAAA,+BACA;AAAA,oBAAIH,OAAO,CAACE,IAAR,GAAeE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADA;AAFF,OAAkCJ,OAAO,CAACK,EAA1C;AAAA;AAAA;AAAA;AAAA,YADF,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzCD;;GAAMpB,M;;KAAAA,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { db } from '../utils/firebaseConfig';\nimport { AuthContext } from '../providers/users/UserProvider';\n\nconst Profil = () => {\n \n  const { currentUser } = useContext(AuthContext);\n  const location = useLocation();\n  const profil = location.state.profil;\n\n  console.log(currentUser)\n\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n\n    db.collection(\"Comments\")\n    \n    .onSnapshot(snapshot => {\n      setComments(\n        snapshot.docs\n      );\n    });\n  }, []);\n  \n  console.log(comments);\n\n  \n\n  return (\n    <div className=\"Read\">\n      <p>Profil of : {}</p>\n        {comments &&\n          comments.map((comment) => (\n            <div className=\"commentBody\" key={comment.id}>\n              {currentUser.uid === comment.data().profilID && \n              <>\n              <p>{comment.data().text}</p> \n              </>\n              }\n              \n            </div>\n          ))}\n    </div>\n  );\n};\n  \nexport default Profil;\n"]},"metadata":{},"sourceType":"module"}