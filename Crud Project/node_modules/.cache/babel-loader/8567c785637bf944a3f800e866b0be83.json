{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/Read.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport firebase, { db } from '../../utils/firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Read = () => {\n  _s();\n\n  const [comment, setComment] = useState(\"\");\n  useEffect(() => {\n    db.collection(\"comments\").onSnapshot(snapshot => {\n      setComment(snapshot.docs.map(doc => ({\n        comment: doc.data()\n      })));\n    });\n    console.log(comment);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Read\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Read, \"ay4Kme2X4sPVV8YOe1wL/8NfSAs=\");\n\n_c = Read;\nexport default Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/Read.jsx"],"names":["React","useState","useEffect","firebase","db","Read","comment","setComment","collection","onSnapshot","snapshot","docs","map","doc","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,IAAmBC,EAAnB,QAA6B,4BAA7B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,EAAE,CAACI,UAAH,CAAc,UAAd,EAA0BC,UAA1B,CAAsCC,QAAD,IAAc;AACjDH,MAAAA,UAAU,CACRG,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC1BP,QAAAA,OAAO,EAAEO,GAAG,CAACC,IAAJ;AADiB,OAAV,CAAlB,CADQ,CAAV;AAKD,KAND;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtBD;;GAAMD,I;;KAAAA,I;AAwBN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firebase, { db } from '../../utils/firebaseConfig';\n\nconst Read = () => {\n\n  const [comment, setComment] = useState(\"\");\n\n  useEffect(() => {\n    db.collection(\"comments\").onSnapshot((snapshot) => {\n      setComment(\n        snapshot.docs.map((doc) => ({\n          comment: doc.data()\n        }))\n      );\n    });\n    console.log(comment);\n  }, []);\n\n  return (\n    <div className=\"Read\">\n\n    \n      \n    </div>\n  );\n};\n\nexport default Read;\n"]},"metadata":{},"sourceType":"module"}