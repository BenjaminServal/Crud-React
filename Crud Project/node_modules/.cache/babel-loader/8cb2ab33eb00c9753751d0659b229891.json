{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { db } from \"../../utils/firebaseConfig\";\nimport { useEffect } from \"react\";\nexport const createComment = (comment, game, currentUser) => {\n  _s();\n\n  const [profils, setProfils] = useState([]);\n  useEffect(() => {\n    db.collection(\"Profil\").onSnapshot(snapshot => {\n      setProfils(snapshot.docs);\n    });\n  }, []);\n  console.log(profils);\n\n  if (currentUser === null) {\n    return;\n  }\n\n  return db.collection(\"Comments\").add({\n    author: profils.name,\n    gameId: game.id,\n    text: comment,\n    profilID: profils.uid\n  }).then(() => {\n    console.log(\"createComment OK\");\n    return true;\n  }).catch(reason => {\n    console.log(\"createComment Error : \" + reason);\n    return false;\n  });\n};\n\n_s(createComment, \"o65eg3mjLWO0L3kdSGP21HaEkp8=\");\n\nexport const updateComment = (updatedText, comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  return db.collection(\"Comments\").doc(comment.id).set({\n    author: comment.data().author,\n    gameId: comment.data().gameId,\n    profilID: comment.data().profilID,\n    text: updatedText\n  }).then(() => {\n    console.log(\"updateComment OK\");\n    return true;\n  }).catch(reason => {\n    console.log(\"updateComment Error : \" + reason);\n    return false;\n  });\n  deleteComment();\n};\nexport const deleteComment = (comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  return db.collection(\"Comments\").doc(comment.id).delete().then(() => {\n    console.log(\"deleteComment OK\");\n    return true;\n  }).catch(reason => {\n    console.log(\"deleteComment Error : \" + reason);\n    return false;\n  });\n};","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/CommentrayFirestoreService.jsx"],"names":["db","useEffect","createComment","comment","game","currentUser","profils","setProfils","useState","collection","onSnapshot","snapshot","docs","console","log","add","author","name","gameId","id","text","profilID","uid","then","catch","reason","updateComment","updatedText","doc","set","data","deleteComment","delete"],"mappings":";;AAAA,SAASA,EAAT,QAAmB,4BAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,IAAV,EAAgBC,WAAhB,KAAgC;AAAA;;AAC3D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AAEdD,IAAAA,EAAE,CAACS,UAAH,CAAc,QAAd,EACCC,UADD,CACYC,QAAQ,IAAI;AACtBJ,MAAAA,UAAU,CACRI,QAAQ,CAACC,IADD,CAAV;AAGD,KALD;AAMD,GARQ,EAQN,EARM,CAAT;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;;AAEA,MAAID,WAAW,KAAK,IAApB,EAA0B;AACxB;AACD;;AACD,SAAOL,EAAE,CACNS,UADI,CACO,UADP,EAEJM,GAFI,CAEA;AACHC,IAAAA,MAAM,EAAEV,OAAO,CAACW,IADb;AAEHC,IAAAA,MAAM,EAAEd,IAAI,CAACe,EAFV;AAGHC,IAAAA,IAAI,EAAEjB,OAHH;AAIHkB,IAAAA,QAAQ,EAAEf,OAAO,CAACgB;AAJf,GAFA,EASJC,IATI,CASC,MAAM;AACVV,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAO,IAAP;AACD,GAZI,EAaJU,KAbI,CAaEC,MAAM,IAAI;AACfZ,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BW,MAAvC;AACA,WAAO,KAAP;AACD,GAhBI,CAAP;AAiBD,CAnCM;;GAAMvB,a;;AAqCb,OAAO,MAAMwB,aAAa,GAAG,CAACC,WAAD,EAAcxB,OAAd,EAAuBE,WAAvB,KAAuC;AAClE,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB;AACD;;AAED,SAAOL,EAAE,CACNS,UADI,CACO,UADP,EAEJmB,GAFI,CAEAzB,OAAO,CAACgB,EAFR,EAGJU,GAHI,CAGA;AACHb,IAAAA,MAAM,EAAEb,OAAO,CAAC2B,IAAR,GAAed,MADpB;AAEHE,IAAAA,MAAM,EAAEf,OAAO,CAAC2B,IAAR,GAAeZ,MAFpB;AAGHG,IAAAA,QAAQ,EAAElB,OAAO,CAAC2B,IAAR,GAAeT,QAHtB;AAIHD,IAAAA,IAAI,EAAEO;AAJH,GAHA,EASJJ,IATI,CASC,MAAM;AACVV,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAO,IAAP;AACD,GAZI,EAaJU,KAbI,CAaEC,MAAM,IAAI;AACfZ,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BW,MAAvC;AACA,WAAO,KAAP;AACD,GAhBI,CAAP;AAiBEM,EAAAA,aAAa;AAChB,CAvBM;AAyBP,OAAO,MAAMA,aAAa,GAAG,CAAC5B,OAAD,EAAUE,WAAV,KAA0B;AACrD,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB;AACD;;AAED,SAAOL,EAAE,CACNS,UADI,CACO,UADP,EAEJmB,GAFI,CAEAzB,OAAO,CAACgB,EAFR,EAGJa,MAHI,GAIJT,IAJI,CAIC,MAAM;AACVV,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAO,IAAP;AACD,GAPI,EAQJU,KARI,CAQEC,MAAM,IAAI;AACfZ,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BW,MAAvC;AACA,WAAO,KAAP;AACD,GAXI,CAAP;AAYD,CAjBM","sourcesContent":["import { db } from \"../../utils/firebaseConfig\";\nimport { useEffect } from \"react\";\n\nexport const createComment = (comment, game, currentUser) => {\n  const [profils, setProfils] = useState([]);\n\n  useEffect(() => {\n\n    db.collection(\"Profil\")\n    .onSnapshot(snapshot => {\n      setProfils(\n        snapshot.docs\n      );\n    });\n  }, []);\n\n  console.log(profils);\n\n  if (currentUser === null) {\n    return;\n  }\n  return db\n    .collection(\"Comments\")\n    .add({\n      author: profils.name,\n      gameId: game.id,\n      text: comment,\n      profilID: profils.uid\n\n    })\n    .then(() => {\n      console.log(\"createComment OK\");\n      return true;\n    })\n    .catch(reason => {\n      console.log(\"createComment Error : \" + reason);\n      return false;\n    });\n};\n\nexport const updateComment = (updatedText, comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  return db\n    .collection(\"Comments\")\n    .doc(comment.id)\n    .set({\n      author: comment.data().author,\n      gameId: comment.data().gameId,\n      profilID: comment.data().profilID,\n      text: updatedText\n    })\n    .then(() => {\n      console.log(\"updateComment OK\");\n      return true;\n    })\n    .catch(reason => {\n      console.log(\"updateComment Error : \" + reason);\n      return false;\n    });\n    deleteComment()\n};\n\nexport const deleteComment = (comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  return db\n    .collection(\"Comments\")\n    .doc(comment.id)\n    .delete()\n    .then(() => {\n      console.log(\"deleteComment OK\");\n      return true;\n    })\n    .catch(reason => {\n      console.log(\"deleteComment Error : \" + reason);\n      return false;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}