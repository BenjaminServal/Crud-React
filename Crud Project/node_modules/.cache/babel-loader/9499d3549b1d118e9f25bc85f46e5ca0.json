{"ast":null,"code":"import { db } from \"../utils/firebaseConfig\";\nexport const createComment = async (comment, game, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  try {\n    await db.collection(\"Comments\").add({\n      author: currentUser.displayName,\n      gameID: game.id,\n      gameName: game.name,\n      text: comment,\n      profilID: currentUser.uid\n    });\n    console.log(\"createComment OK\");\n    return true;\n  } catch (reason) {\n    console.log(\"createComment Error : \" + reason);\n    return false;\n  }\n};\nexport const updateComment = async (updatedText, comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  try {\n    await db.collection(\"Comments\").doc(comment.id).set({\n      author: comment.data().author,\n      gameID: comment.data().gameID,\n      gameName: comment.data().gameName,\n      profilID: comment.data().profilID,\n      text: updatedText\n    });\n    console.log(\"updateComment OK\");\n    return true;\n  } catch (reason) {\n    console.log(\"updateComment Error : \" + reason);\n    return false;\n  }\n};\nexport const deleteComment = async (comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  try {\n    await db.collection(\"Comments\").doc(comment.id).delete();\n    console.log(\"deleteComment OK\");\n    return true;\n  } catch (reason) {\n    console.log(\"deleteComment Error : \" + reason);\n    return false;\n  }\n};\nexport const getCommentsForProfil = async profilID => {\n  try {\n    const comments = await db.collection(\"Comments\").where(\"profilID\", \"==\", profilID).get();\n    return comments.docs;\n  } catch (reason) {\n    // gestion d'erreur avec `reason`\n    return [];\n  }\n};\nexport const getCommentsForGame = async gameID => {\n  try {\n    const comments = await db.collection(\"Comments\").where(\"gameID\", \"==\", gameID).get();\n    return comments.docs;\n  } catch (reason) {\n    console.log(reason);\n    return [];\n  }\n};","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/ExampleProject-main/src/API/CommentrayFirestoreService.jsx"],"names":["db","createComment","comment","game","currentUser","collection","add","author","displayName","gameID","id","gameName","name","text","profilID","uid","console","log","reason","updateComment","updatedText","doc","set","data","deleteComment","delete","getCommentsForProfil","comments","where","get","docs","getCommentsForGame"],"mappings":"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","sourcesContent":["import { db } from \"../utils/firebaseConfig\";\n\nexport const createComment = async (comment, game, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n  try {\n    await db\n      .collection(\"Comments\")\n      .add({\n        author: currentUser.displayName,\n        gameID: game.id,\n        gameName: game.name,\n        text: comment,\n        profilID: currentUser.uid\n      });\n    console.log(\"createComment OK\");\n    return true;\n  }\n  catch (reason) {\n    console.log(\"createComment Error : \" + reason);\n    return false;\n  }\n};\n\nexport const updateComment = async (updatedText, comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  try {\n    await db\n      .collection(\"Comments\")\n      .doc(comment.id)\n      .set({\n        author: comment.data().author,\n        gameID: comment.data().gameID,\n        gameName: comment.data().gameName,\n        profilID: comment.data().profilID,\n        text: updatedText\n      });\n    console.log(\"updateComment OK\");\n    return true;\n  }\n  catch (reason) {\n    console.log(\"updateComment Error : \" + reason);\n    return false;\n  }\n};\n\nexport const deleteComment = async (comment, currentUser) => {\n  if (currentUser === null) {\n    return;\n  }\n\n  try {\n    await db\n      .collection(\"Comments\")\n      .doc(comment.id)\n      .delete();\n    console.log(\"deleteComment OK\");\n    return true;\n  }\n  catch (reason) {\n    console.log(\"deleteComment Error : \" + reason);\n    return false;\n  }\n};\n\nexport const getCommentsForProfil = async profilID => {\n  try {\n\n    const comments =  await db\n      .collection(\"Comments\")\n      .where(\"profilID\", \"==\", profilID)\n      .get()\n\n      return comments.docs\n    }\n  catch (reason) {\n    // gestion d'erreur avec `reason`\n    return [];\n  } \n};\n\n\nexport const getCommentsForGame = async gameID => {\n  try {\n    const comments = await db.collection(\"Comments\").where(\"gameID\", \"==\", gameID).get()\n    return comments.docs\n  }\n  catch (reason) {\n    console.log(reason)\n    return [];\n  }\n}"]},"metadata":{},"sourceType":"module"}