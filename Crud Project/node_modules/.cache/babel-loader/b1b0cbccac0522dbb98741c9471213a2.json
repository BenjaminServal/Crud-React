{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/Read.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport firebase, { db } from '../../utils/firebaseConfig';\nimport { AuthContext } from '../../providers/users/UserProvider';\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Read = ({\n  game\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [comment, setComment] = useState(\"\");\n  const [test, setTest] = useState(false);\n  useEffect(() => {\n    db.collection(\"comments\").onSnapshot(snapshot => {\n      setComment(snapshot.docs.map(doc => ({\n        id: doc.id,\n        comment: doc.data()\n      })));\n    });\n    setTest(false);\n  }, []);\n  console.log(comment);\n  console.log(game.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Read\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comment.gameId === game.id && comment.map(({\n        comment,\n        id\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentBody\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Read, \"PHEJ8bEB+WaR+OmtEJjT1oZZODQ=\");\n\n_c = Read;\nexport default Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["/Users/benjaminserval/dev/GameV2/gamesite/src/components/comments/Read.jsx"],"names":["React","useState","useEffect","useContext","firebase","db","AuthContext","useLocation","Read","game","currentUser","comment","setComment","test","setTest","collection","onSnapshot","snapshot","docs","map","doc","id","data","console","log","gameId","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,QAAP,IAAmBC,EAAnB,QAA6B,4BAA7B;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAEvB,QAAM;AAACC,IAAAA;AAAD,MAAgBP,UAAU,CAACG,WAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,EAAE,CAACU,UAAH,CAAc,UAAd,EAA0BC,UAA1B,CAAsCC,QAAD,IAAc;AACjDL,MAAAA,UAAU,CACRK,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC1BC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADkB;AAE1BV,QAAAA,OAAO,EAAES,GAAG,CAACE,IAAJ;AAFiB,OAAV,CAAlB,CADQ,CAAV;AAMD,KAPD;AAQAR,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAVQ,EAUN,EAVM,CAAT;AAYAS,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACY,EAAjB;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAA,gBACCV,OAAO,CAACc,MAAR,KAAmBhB,IAAI,CAACY,EAAxB,IACDV,OAAO,CAACQ,GAAR,CAAY,CAAC;AAACR,QAAAA,OAAD;AAAUU,QAAAA;AAAV,OAAD,kBACV;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAA,oBAAIV,OAAO,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,SAAkCL,EAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AAFA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvCD;;GAAMb,I;;KAAAA,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport firebase, { db } from '../../utils/firebaseConfig';\nimport { AuthContext } from '../../providers/users/UserProvider';\nimport { useLocation } from \"react-router-dom\";\n\n\nconst Read = ({game}) => {\n\n  const {currentUser} = useContext(AuthContext);\n  const [comment, setComment] = useState(\"\");\n  const [test, setTest] = useState(false);\n\n  useEffect(() => {\n    db.collection(\"comments\").onSnapshot((snapshot) => {\n      setComment(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          comment: doc.data()\n        }))\n      );\n    });\n    setTest(false);\n  }, []);\n\n  console.log(comment);\n  console.log(game.id)\n  \n  \n\n  \n\n  return (\n    <div className=\"Read\">\n      <ul>\n      {comment.gameId === game.id &&\n      comment.map(({comment, id}) => (\n        <div className=\"commentBody\" key={id}>\n          <p>{comment.text}</p>\n        </div>\n        ))}\n\n      </ul>\n\n    </div>\n  );\n};\n\nexport default Read;\n"]},"metadata":{},"sourceType":"module"}